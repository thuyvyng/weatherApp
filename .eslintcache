[{"/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/index.js":"1","/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/App.js":"2","/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/pages/Error.js":"3","/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/pages/Search.js":"4","/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/components/Navbar.js":"5","/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/pages/About.js":"6"},{"size":291,"mtime":1677643855752,"results":"7","hashOfConfig":"8"},{"size":721,"mtime":1677707021252,"results":"9","hashOfConfig":"8"},{"size":434,"mtime":1677705955114,"results":"10","hashOfConfig":"8"},{"size":14287,"mtime":1683248720924,"results":"11","hashOfConfig":"8"},{"size":447,"mtime":1683237188049,"results":"12","hashOfConfig":"8"},{"size":2090,"mtime":1683236956458,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"dulxck",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/index.js",[],["28","29"],"/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/App.js",[],"/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/pages/Error.js",[],"/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/pages/Search.js",["30"],"/**@jsxImportSource @emotion/react */\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport fetch from \"isomorphic-unfetch\";\nimport { css } from \"@emotion/react\";\n\nimport { Container, Row, Col, Form, Button, Card } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navigation from \"../components/Navbar\";\nvar OW = \"7caac9e6166772127226ad6470b80a57\";\n\nfunction WeatherCard(props) {\n  const d = new Date(props.dt);\n  const low = css`\n    color: blue;\n  `;\n\n  const high = css`\n    color: red;\n  `;\n\n  var weatherMessage = \"\";\n  var weatherBackground = \"\";\n\n  if (props.snow) {\n    weatherMessage = \"Woah snow? Better get some mittens for some snow angels.\";\n    weatherBackground =\n      \"https://static.vecteezy.com/system/resources/previews/000/210/590/original/vector-christmas-snow-background.jpg\";\n  } else if (props.pop > 0.4) {\n    weatherMessage =\n      \"It's likely that it's going to rain, might wanna bring an umbrella or jacket.\";\n    weatherBackground =\n      \"https://static.vecteezy.com/system/resources/previews/009/639/565/original/stock-illustration-seamless-pattern-watercolor-drawing-raindrops-on-a-white-background-isolated-rain-of-blue-violet-turquoise-cute-watercolor-background-for-baby-wallpaper-textile-wrappers-vector.jpg\";\n  } else {\n    weatherBackground =\n      \"https://www.nikkisplate.com/wp-content/uploads/2022/08/Screen-Shot-2021-06-26-at-4.26.18-PM.png\";\n  }\n\n  var temperatureMessage = \"\";\n  var sleeveLength = 0;\n  var topColor = \"red\";\n  var sleeveColor = \"red\";\n  var dressLength = 22;\n  var bottomsColor = \"#f8d9c1\";\n  var shoeColor = \"white\";\n  var which = Math.floor(Math.random() * 2);\n\n  if (props.feels_like < 40) {\n    //purple combo or pink sweater over white\n    temperatureMessage =\n      \"Ooh! It's freezing out here -- make sure to bundle up. Wear a cozy jacket, keep some gloves on hand, throw on some boots, and maybe add a cute beanie or scarf for a nice touch. \";\n    sleeveLength = 20;\n    if (which === 1) {\n      topColor = \"#bd7dbd\"; //\"white\";\n      sleeveColor = \"#ad5cad\"; //\"pink\";\n      shoeColor = \"purple\";\n    } else {\n      topColor = \"white\";\n      sleeveColor = \"pink\"; //\"pink\";\n      shoeColor = \"pink\";\n    }\n\n    dressLength = 15;\n    bottomsColor = \"#6F8FAF\";\n  } else if (props.feels_like < 55) {\n    //goth outfit\n    temperatureMessage =\n      \"Pretty cold out here, so light layers will be your best friend. Put on some cute jeans, a long sleeve, and a cute jacket to top it off. \";\n    sleeveColor = \"#303336\";\n    bottomsColor = \"black\";\n    topColor = \"#d2d4d2\";\n    sleeveLength = 20;\n    dressLength = 15;\n    shoeColor = \"grey\";\n  } else if (props.feels_like < 70) {\n    //purple pants and white shirt\n    temperatureMessage =\n      \"Not bad weather. Cute light shirt would be nice. Maybe pair it with a nice pair of fun pants or with a skirt and add some tights for extra warmth\";\n    sleeveLength = 60;\n    topColor = \"#FAF9F6\";\n    sleeveColor = \"#FAF9F6\";\n    bottomsColor = \"#ca97ca\";\n    shoeColor = \"#bd7dbd\";\n    dressLength = 14;\n  } else if (props.feels_like < 88) {\n    temperatureMessage =\n      \"Nice weather. Maybe wear a nice dress or just cute skirt and a cute shirt.\";\n    topColor = \"#E1EEDD\";\n    sleeveColor = \"#E1EEDD\";\n    sleeveLength = 60;\n    dressLength = 22;\n    if (which === 1) {\n      topColor = \"#E1EEDD\";\n      sleeveColor = \"#E1EEDD\";\n      shoeColor = \"#e6ffe6\";\n    } else {\n      sleeveColor = \"#9DC08B\";\n      topColor = \"#9DC08B\";\n      shoeColor = \"black\";\n    }\n  } else {\n    //Alaia Dress or Calvin Klein\n    temperatureMessage =\n      \"It's crazy hot out here, stay hydrated. Keep some water on hand. If you can make it to water grab a bikini and go to the pool, if you're not as lucky a cute dress will help you out. My favorites are my Alaia or Calvin Klein dresses. \";\n    sleeveLength = 100;\n    if (which === 1) {\n      topColor = \"red\";\n      shoeColor = \"red\";\n    } else {\n      topColor = \"white\";\n      shoeColor = \"pink\";\n    }\n    sleeveColor = \"red\";\n    dressLength = 22;\n  }\n\n  const styles = css`\n    :root {\n      --skin: #f8d9c1;\n      --border: #483b55;\n      --tshirt1: teal;\n      --tshirt2: tomato;\n      --shadow: #483b5555;\n      --bg: wheat;\n    }\n\n    *,\n    *:after,\n    *:before {\n      box-sizing: border-box;\n    }\n    *:after,\n    *:before {\n      content: \"\";\n    }\n    .me *,\n    .me *:after,\n    .me *:before {\n      position: absolute;\n      left: 0;\n      right: 0;\n      margin: auto;\n    }\n\n    .body {\n      background: #f8d9c1;\n    }\n\n    .illustration {\n      min-height: 790px;\n      z-index: 1;\n      margin: auto;\n    }\n\n    .head {\n      border-bottom: none;\n      background-position: top left;\n      top: 14vh;\n      height: 14vh;\n      width: 11vh;\n      border-radius: 50% 40% 0 0;\n      z-index: 2;\n      transform-origin: center bottom;\n    }\n    .hair {\n      border-radius: 50% 50% 0 0 / 60% 60% 0 0;\n      background: #faf0be;\n      width: 100%;\n      height: 100%;\n      top: 10%;\n      z-index: 1;\n    }\n\n    .face {\n      top: 9vh;\n      width: 7vh;\n      height: 4.25vh;\n      border-radius: 0 0 6vh 6vh / 0 0 7.5vh 7.5vh;\n      border-top: none;\n      z-index: 2;\n      overflow: hidden;\n      &:before,\n      &:after {\n        background: tomato;\n        width: 2vh;\n        height: 2vh;\n        border-radius: 50%;\n        left: 0;\n        right: auto;\n        top: 1vh;\n        opacity: 0;\n      }\n      &:after {\n        right: 0;\n        left: auto;\n      }\n    }\n\n    .face-up {\n      background: #f8d9c1;\n      height: 2vh;\n      width: 7vh;\n      top: 7.25vh;\n      clip-path: polygon(60% 0, 100% 100%, 0 100%);\n      z-index: 1;\n    }\n\n    .nose {\n      top: 1vh;\n      width: 15%;\n      height: 1vh;\n      border-radius: 0 0 0.75vh 0.75vh;\n      border: 0.25vh solid #483b5555;\n      border-top-color: #f8d9c1;\n    }\n    .lips {\n      border-bottom: 2px solid;\n      border-radius: 0 0 100% 100% / 0 0 100% 100%;\n      width: 2vh;\n      height: 1vh;\n      top: 2vh;\n    }\n    .eyes {\n      top: 0.5vh;\n      height: 2vh;\n    }\n    .eyes:before,\n    .eyes:after {\n      border: 2px solid;\n      border-top: none;\n      width: 1.75vh;\n      height: 0.5vh;\n    }\n    .eyes:before {\n      right: auto;\n      border-radius: 100% 0%;\n      left: calc(50% + 1.125vh);\n      border-left: none;\n    }\n    .eyes:after {\n      left: auto;\n      border-radius: 0% 100% 0% 100%;\n      right: calc(50% + 1.125vh);\n      border-right: none;\n    }\n    .neck {\n      box-shadow: inset 0 1vh 0.3vh #483b5555;\n      height: 3.5vh;\n      width: 2.4vh;\n      top: 12.5vh;\n      border-bottom-color: #f8d9c1;\n      z-index: 1;\n    }\n\n    .decoltee {\n      border: 0.7vh solid #f8d9c1;\n      border-top: 0;\n      z-index: 10;\n      height: 8%;\n      width: 27%;\n      top: 15.5vh;\n      border-radius: 0 0 50% 50% / 0 0 100% 100%;\n    }\n    .dress {\n      background: ${topColor};\n      clip-path: polygon(35% 0%, 65% 0, 100% 100%, 0 100%);\n      background-position: bottom center;\n      background-size: 100% 2vh;\n      height: ${dressLength}vh;\n      width: 11vh;\n      top: 29.5vh;\n      z-index: 1;\n      transform-origin: center top;\n    }\n    .trapeze {\n      height: 30vh;\n    }\n\n    .arm {\n      width: 14vh;\n      height: 2vh;\n      bottom: -2vh;\n      left: auto;\n      right: auto;\n      border-radius: 2vh;\n    }\n    .arm-l {\n      transform-origin: right top;\n      right: calc(50% + 2vh);\n      transform: rotate(-60deg);\n      background-image: linear-gradient(\n        to right,\n        transparent ${sleeveLength}%,\n        ${sleeveColor} ${sleeveLength}%,\n        ${sleeveColor}\n      );\n    }\n    .arm-r {\n      background-image: linear-gradient(\n        to left,\n        transparent ${sleeveLength}%,\n        ${sleeveColor} ${sleeveLength}%,\n        ${sleeveColor}\n      );\n      transform-origin: left top;\n      left: calc(50% + 2vh);\n      transform: rotate(60deg);\n    }\n    .me {\n      z-index: 0;\n    }\n    .leg {\n      height: 10vh;\n      width: 2.25vh;\n      top: 43vh;\n      border-radius: 2vh;\n      background: ${bottomsColor};\n      &:after {\n        z-index: -1;\n        content: \"\";\n        height: 20vh;\n        width: 2.25vh;\n        background: inherit;\n        border-radius: 2vh;\n        top: calc(100% - 2vh);\n        background-image: linear-gradient(\n          to bottom,\n          transparent 20%,\n          transparent 70%,\n          ${shoeColor} 70%,\n          ${shoeColor}\n        );\n      }\n    }\n    .leg-l {\n      transform-origin: center top;\n      transform: rotate(5deg);\n      left: -4vh;\n    }\n\n    .leg-r {\n      transform-origin: center 1vh;\n      left: 4vh;\n      transform: rotate(-5deg);\n    }\n  `;\n  return (\n    <Card className=\"border-secondary\">\n      <Row>\n        <Col>\n          <Container>\n            <Card.Body>\n              <Card.Title className=\"display-4\">{d.toDateString()}</Card.Title>\n              <Card.Text className=\"lead\">\n                <img\n                  src={`http://openweathermap.org/img/wn/${props.pic}@2x.png`}\n                />\n                {props.des}, feels like {props.feels_like} °F\n              </Card.Text>\n              <Row>\n                <Col> Current temp:</Col>\n                <Col> {props.temp_min} °F</Col>\n                <Col css={high}> </Col>\n              </Row>\n              <Row>\n                <Col> Lows & Highs:</Col>\n                <Col css={low}> {props.temp_min} °F</Col>\n                <Col css={high}> {props.temp_max} °F</Col>\n              </Row>\n              <Row>\n                <Col> Precipitation:</Col>\n                <Col>{props.pop * 100}% </Col>\n                <Col></Col>\n              </Row>\n              <Row>\n                <Col> Humidity:</Col>\n                <Col>{props.humidity}% </Col>\n                <Col></Col>\n              </Row>\n\n              <br></br>\n              <Row>\n                <Col>\n                  <p className=\"lead\"> What would Cher wear?</p>\n                  {temperatureMessage}\n                  {<Card.Text>{weatherMessage}</Card.Text>}\n                </Col>\n              </Row>\n            </Card.Body>\n          </Container>\n        </Col>\n        <Col\n          style={{\n            backgroundImage: `url(${weatherBackground})`,\n            backgroundSize: \"100% 100%\",\n          }}\n        >\n          <div css={styles}>\n            <div className=\"illustration\">\n              <div className=\"me\">\n                <div className=\"head\">\n                  <div className=\"hair\"></div>\n                  <div className=\"face-up\"></div>\n                  <div className=\"face body\">\n                    <div className=\"eyes\"></div>\n                    <div className=\"nose\"></div>\n                    <div className=\"lips\"></div>\n                  </div>\n                  <div className=\"neck body\"></div>\n                  <div className=\"decoltee\"></div>\n                </div>\n                <div className=\"dress\"></div>\n                <div className=\"trapeze\">\n                  <div className=\"arm arm-l body\"></div>\n                  <div className=\"arm arm-r body\"></div>\n                </div>\n                <div className=\"leg leg-l body\"></div>\n                <div className=\"leg leg-r body\"></div>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nfunction Search({ query }) {\n  const [inputQuery, setInputQuery] = useState(query || \"\");\n  const [city, setCity] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    let ignore = false;\n    const controller = new AbortController();\n    async function fetchSearchResults() {\n      let responseBody = {};\n      try {\n        console.log(JSON.stringify(query));\n        const res = await fetch(\n          `http://api.openweathermap.org/geo/1.0/direct?q=${query}&appid=${OW}`,\n          { signal: controller.signal }\n        );\n        responseBody = await res.json();\n      } catch (e) {\n        if (e instanceof DOMException) {\n          console.log(\"HTTP Request Aborted\");\n        }\n      }\n\n      let responseBody2 = {};\n      try {\n        const res = await fetch(\n          `https://api.openweathermap.org/data/2.5/forecast?lat=${responseBody[0].lat}&lon=${responseBody[0].lon}&appid=${OW}&units=imperial`,\n          { signal: controller.signal }\n        );\n        responseBody2 = await res.json();\n      } catch (e) {\n        if (e instanceof DOMException) {\n          console.log(\"HTTP Request Aborted\");\n        }\n      }\n\n      if (!ignore) {\n        setCity(responseBody2.list || []);\n        console.log(responseBody2.list[0]);\n      }\n    }\n\n    if (query) {\n      fetchSearchResults();\n    }\n\n    return () => {\n      controller.abort();\n      ignore = true;\n    };\n  }, [query]);\n\n  return (\n    <div>\n      <Navigation />\n      <Container>\n        <br></br>\n        <Row>\n          <Col>\n            <Form\n              className=\"d-flex\"\n              onSubmit={(e) => {\n                e.preventDefault();\n                history.push(`?q=${inputQuery}`);\n              }}\n            >\n              <Form.Control\n                className=\"me-2\"\n                type=\"text\"\n                placeholder=\"Enter City Here: Seattle,WA,US\"\n                aria-label=\"Search\"\n                value={inputQuery}\n                onChange={(e) => setInputQuery(e.target.value)}\n              />\n\n              <Button type=\"submit\">Search</Button>\n            </Form>\n          </Col>\n        </Row>\n        <br></br>\n        <br></br>\n        <Row>\n          <Col>\n            {city.slice(0, 1).map((city) => {\n              return (\n                <WeatherCard\n                  temp={city.main.temp}\n                  temp_min={city.main.temp_min}\n                  temp_max={city.main.temp_max}\n                  feels_like={city.main.feels_like}\n                  humidity={city.main.humidity}\n                  dt={city.dt_txt}\n                  pop={city.pop}\n                  main={city.weather[0].main}\n                  des={city.weather[0].description}\n                  pic={city.weather[0].icon}\n                  snow={city.snow}\n                />\n              );\n            })}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Search;\n","/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/components/Navbar.js",[],"/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/pages/About.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":355,"column":17,"nodeType":"37","endLine":357,"endColumn":19},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]