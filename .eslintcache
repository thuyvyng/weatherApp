[{"/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/index.js":"1","/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/App.js":"2","/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/pages/Error.js":"3","/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/pages/Search.js":"4","/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/components/Navbar.js":"5","/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/pages/About.js":"6","/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/components/WeatherCard.js":"7"},{"size":291,"mtime":1677643855752,"results":"8","hashOfConfig":"9"},{"size":721,"mtime":1677707021252,"results":"10","hashOfConfig":"9"},{"size":434,"mtime":1677705955114,"results":"11","hashOfConfig":"9"},{"size":11827,"mtime":1678246613606,"results":"12","hashOfConfig":"9"},{"size":447,"mtime":1677706760286,"results":"13","hashOfConfig":"9"},{"size":1848,"mtime":1682973184317,"results":"14","hashOfConfig":"9"},{"size":8081,"mtime":1677707645270,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"dulxck",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/index.js",[],["32","33"],"/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/App.js",[],"/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/pages/Error.js",[],"/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/pages/Search.js",["34","35","36"],"/**@jsxImportSource @emotion/react */\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport fetch from \"isomorphic-unfetch\";\nimport { css } from \"@emotion/react\";\n\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  Card,\n  Jumbotron,\n} from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navigation from \"../components/Navbar\";\n\nvar OW = \"7caac9e6166772127226ad6470b80a57\";\n\nfunction WeatherCard(props) {\n  const d = new Date(props.dt);\n  const low = css`\n    color: blue;\n  `;\n\n  const high = css`\n    color: red;\n  `;\n\n  const row = css`\n    text-align: center;\n  `;\n\n  const styles = css`\n    :root {\n      --skin: #f8d9c1;\n      --border: #483b55;\n      --tshirt1: teal;\n      --tshirt2: tomato;\n      --shadow: #483b5555;\n      --bg: wheat;\n    }\n\n    *,\n    *:after,\n    *:before {\n      box-sizing: border-box;\n    }\n    *:after,\n    *:before {\n      content: \"\";\n    }\n    .me *,\n    .me *:after,\n    .me *:before {\n      position: absolute;\n      left: 0;\n      right: 0;\n      margin: auto;\n    }\n\n    .body {\n      background: #f8d9c1;\n    }\n\n    .illustration {\n      min-height: 790px;\n      z-index: 1;\n      margin: auto;\n    }\n\n    .head {\n      border-bottom: none;\n      background-position: top left;\n      top: 14vh;\n      height: 14vh;\n      width: 11vh;\n      border-radius: 50% 40% 0 0;\n      z-index: 2;\n      transform-origin: center bottom;\n    }\n    .hair {\n      border-radius: 50% 50% 0 0 / 60% 60% 0 0;\n      background: #faf0be;\n      width: 100%;\n      height: 100%;\n      top: 10%;\n      z-index: 1;\n    }\n\n    .face {\n      top: 9vh;\n      width: 7vh;\n      height: 4.25vh;\n      border-radius: 0 0 6vh 6vh / 0 0 7.5vh 7.5vh;\n      border-top: none;\n      z-index: 2;\n      overflow: hidden;\n      &:before,\n      &:after {\n        background: tomato;\n        width: 2vh;\n        height: 2vh;\n        border-radius: 50%;\n        left: 0;\n        right: auto;\n        top: 1vh;\n        opacity: 0;\n      }\n      &:after {\n        right: 0;\n        left: auto;\n      }\n    }\n\n    .face-up {\n      background: #f8d9c1;\n      height: 2vh;\n      width: 7vh;\n      top: 7.25vh;\n      clip-path: polygon(60% 0, 100% 100%, 0 100%);\n      z-index: 1;\n    }\n\n    .nose {\n      top: 1vh;\n      width: 15%;\n      height: 1vh;\n      border-radius: 0 0 0.75vh 0.75vh;\n      border: 0.25vh solid #483b5555;\n      border-top-color: #f8d9c1;\n    }\n    .lips {\n      border-bottom: 2px solid;\n      border-radius: 0 0 100% 100% / 0 0 100% 100%;\n      width: 2vh;\n      height: 1vh;\n      top: 2vh;\n    }\n    .eyes {\n      top: 0.5vh;\n      height: 2vh;\n    }\n    .eyes:before,\n    .eyes:after {\n      border: 2px solid;\n      border-top: none;\n      width: 1.75vh;\n      height: 0.5vh;\n    }\n    .eyes:before {\n      right: auto;\n      border-radius: 100% 0%;\n      left: calc(50% + 1.125vh);\n      border-left: none;\n    }\n    .eyes:after {\n      left: auto;\n      border-radius: 0% 100% 0% 100%;\n      right: calc(50% + 1.125vh);\n      border-right: none;\n    }\n    .neck {\n      box-shadow: inset 0 1vh 0.3vh #483b5555;\n      height: 3.5vh;\n      width: 2.4vh;\n      top: 12.5vh;\n      border-bottom-color: #f8d9c1;\n      z-index: 1;\n    }\n\n    .decoltee {\n      border: 0.5vh solid white;\n      border-top: 0;\n      z-index: 10;\n      height: 8%;\n      width: 27%;\n      top: 15.5vh;\n      border-radius: 0 0 50% 50% / 0 0 100% 100%;\n    }\n    .dress {\n      background: red;\n      clip-path: polygon(30% 0%, 70% 0, 100% 100%, 0 100%);\n      background-position: bottom center;\n      background-size: 100% 2vh;\n      height: 22vh;\n      width: 11vh;\n      top: 29.5vh;\n      z-index: 1;\n      transform-origin: center top;\n    }\n    .trapeze {\n      height: 30vh;\n    }\n\n    .arm {\n      width: 14vh;\n      height: 2vh;\n      bottom: -2vh;\n      left: auto;\n      right: auto;\n      border-radius: 2vh;\n    }\n    .arm-l {\n      transform-origin: right top;\n      right: calc(50% + 2vh);\n      transform: rotate(-60deg);\n    }\n    .arm-r {\n      transform-origin: left top;\n      left: calc(50% + 2vh);\n      transform: rotate(60deg);\n    }\n    .me {\n      z-index: 0;\n    }\n    .leg {\n      height: 5vh;\n      width: 2.25vh;\n      top: 50vh;\n      border-radius: 2vh;\n      &:after {\n        z-index: -1;\n        content: \"\";\n        height: 20vh;\n        width: 2.25vh;\n        background: inherit;\n        border-radius: 2vh;\n        top: calc(100% - 2vh);\n        background-image: linear-gradient(\n          to bottom,\n          transparent 20%,\n          white 20%,\n          white 15%,\n          tomato 25%,\n          tomato 27%,\n          white 27%,\n          white 60%,\n          teal 60%,\n          teal\n        );\n      }\n    }\n    .leg-l {\n      transform-origin: center top;\n      transform: rotate(5deg);\n      left: -4vh;\n    }\n\n    .leg-r {\n      transform-origin: center 1vh;\n      left: 4vh;\n      transform: rotate(-5deg);\n    }\n  `;\n\n  var snowMessage = props.snow\n    ? \"Woah snow? Better get some mittens for some snow angels.\"\n    : \"\";\n  var rainMessage =\n    \"It's likely that it's going to rain, might wanna bring an umbrella or jacket.\";\n\n  var temperatureMessage = \"\";\n  if (props.feels_like < 32) {\n    temperatureMessage =\n      \"Ooh! It's freezing out here -- make sure to bundle up. Wear a cozy jacket, keep some gloves on hand, throw on some boots, and maybe add a cute beanie or scarf for a nice touch. \";\n  } else if (props.feels_like < 55) {\n    temperatureMessage =\n      \"Pretty cold out here, so light layers will be your best friend. Put on some cute jeans, a long sleeve, and a cute jacket to top it off. \";\n  } else if (props.feels_like < 70) {\n    temperatureMessage =\n      \"Not bad weather. Cute light sweater would be nice. Maybe pair it with a nice pair of pants or with a skirt and add some tights for extra warmth\";\n  } else if (props.feels_like < 83) {\n    temperatureMessage =\n      \"Nice weather. Maybe wear a nice dress or just comfy pants and a cute shirt.\";\n  } else if (props.feels_like < 93) {\n    temperatureMessage =\n      \"It's really hot out here.Would be good weather for a pair of cute shorts and a nice shirt. \";\n  } else {\n    temperatureMessage =\n      \"It's crazy hot out here, stay hydrated. Keep some water on hand. If you can make it to water grab a swimsuit and go swimming, if you're not as lucky a cute sundress will help you out. \";\n  }\n\n  return (\n    <Card style={{ backgroundColor: \"#ffdde2\" }}>\n      <Row>\n        <Col>\n          <Container>\n            <Card.Body>\n              <Card.Title class=\"display-4\">{d.toDateString()}</Card.Title>\n              <Card.Text class=\"lead\">\n                <img\n                  src={`http://openweathermap.org/img/wn/${props.pic}@2x.png`}\n                />\n                {props.des}, feels like {props.feels_like} 째F\n              </Card.Text>\n              <Row>\n                <Col> Current temp:</Col>\n                <Col> {props.temp_min} 째F</Col>\n                <Col css={high}> </Col>\n              </Row>\n              <Row>\n                <Col> Lows & Highs:</Col>\n                <Col css={low}> {props.temp_min} 째F</Col>\n                <Col css={high}> {props.temp_max} 째F</Col>\n              </Row>\n              <Row>\n                <Col> Precipitation:</Col>\n                <Col>{props.pop * 100}% </Col>\n                <Col></Col>\n              </Row>\n              <Row>\n                <Col> Humidity:</Col>\n                <Col>{props.humidity}% </Col>\n                <Col></Col>\n              </Row>\n\n              <br></br>\n              <Row>\n                <Col>\n                  <p class=\"lead\"> What would Cher wear?</p>\n                  {temperatureMessage}\n                  {snowMessage}\n                  {props.pop > 0.5 && <Card.Text>{rainMessage}</Card.Text>}\n                </Col>\n              </Row>\n            </Card.Body>\n          </Container>\n        </Col>\n        <Col>\n          <div css={styles}>\n            <div class=\"illustration\">\n              <div class=\"me\">\n                <div class=\"head\">\n                  <div class=\"hair\"></div>\n                  <div class=\"face-up\"></div>\n                  <div class=\"face body\">\n                    <div class=\"eyes\"></div>\n                    <div class=\"nose\"></div>\n                    <div class=\"lips\"></div>\n                  </div>\n                  <div class=\"neck body\"></div>\n                  <div class=\"decoltee\"></div>\n                </div>\n                <div class=\"dress\"></div>\n                <div class=\"trapeze\">\n                  <div class=\"arm arm-l body\"></div>\n                  <div class=\"arm arm-r body\"></div>\n                </div>\n                <div class=\"leg leg-l body\"></div>\n                <div class=\"leg leg-r body\"></div>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nfunction Search({ query }) {\n  const [inputQuery, setInputQuery] = useState(query || \"\");\n  const [city, setCity] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    let ignore = false;\n    const controller = new AbortController();\n    async function fetchSearchResults() {\n      let responseBody = {};\n      try {\n        console.log(JSON.stringify(query));\n        const res = await fetch(\n          `http://api.openweathermap.org/geo/1.0/direct?q=${query}&appid=${OW}`,\n          { signal: controller.signal }\n        );\n        responseBody = await res.json();\n      } catch (e) {\n        if (e instanceof DOMException) {\n          console.log(\"HTTP Request Aborted\");\n        }\n      }\n\n      let responseBody2 = {};\n      try {\n        const res = await fetch(\n          `https://api.openweathermap.org/data/2.5/forecast?lat=${responseBody[0].lat}&lon=${responseBody[0].lon}&appid=${OW}&units=imperial`,\n          { signal: controller.signal }\n        );\n        responseBody2 = await res.json();\n      } catch (e) {\n        if (e instanceof DOMException) {\n          console.log(\"HTTP Request Aborted\");\n        }\n      }\n\n      if (!ignore) {\n        setCity(responseBody2.list || []);\n        console.log(responseBody2.list[0]);\n      }\n    }\n\n    if (query) {\n      fetchSearchResults();\n    }\n\n    return () => {\n      controller.abort();\n      ignore = true;\n    };\n  }, [query]);\n\n  return (\n    <div>\n      <Navigation />\n      <Container>\n        <br></br>\n        <Row>\n          <Col>\n            <Form\n              className=\"d-flex\"\n              onSubmit={(e) => {\n                e.preventDefault();\n                history.push(`?q=${inputQuery}`);\n              }}\n            >\n              <Form.Control\n                className=\"me-2\"\n                type=\"text\"\n                placeholder=\"Enter City Here: Seattle,WA,US\"\n                aria-label=\"Search\"\n                value={inputQuery}\n                onChange={(e) => setInputQuery(e.target.value)}\n              />\n\n              <Button type=\"submit\">Search</Button>\n            </Form>\n          </Col>\n        </Row>\n        <br></br>\n        <br></br>\n        <Row>\n          <Col>\n            {city.slice(0, 1).map((city) => {\n              return (\n                <WeatherCard\n                  temp={city.main.temp}\n                  temp_min={city.main.temp_min}\n                  temp_max={city.main.temp_max}\n                  feels_like={city.main.feels_like}\n                  humidity={city.main.humidity}\n                  dt={city.dt_txt}\n                  pop={city.pop}\n                  main={city.weather[0].main}\n                  des={city.weather[0].description}\n                  pic={city.weather[0].icon}\n                  snow={city.snow}\n                />\n              );\n            })}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Search;\n","/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/components/Navbar.js",[],"/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/pages/About.js",[],"/Users/thuyvynguyen/Documents/GitHub/weatherApp/src/components/WeatherCard.js",["37","38","39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":14,"column":3,"nodeType":"47","messageId":"48","endLine":14,"endColumn":12},{"ruleId":"45","severity":1,"message":"49","line":31,"column":9,"nodeType":"47","messageId":"48","endLine":31,"endColumn":12},{"ruleId":"50","severity":1,"message":"51","line":293,"column":17,"nodeType":"52","endLine":295,"endColumn":19},{"ruleId":"45","severity":1,"message":"53","line":2,"column":10,"nodeType":"47","messageId":"48","endLine":2,"endColumn":19},{"ruleId":"45","severity":1,"message":"54","line":2,"column":31,"nodeType":"47","messageId":"48","endLine":2,"endColumn":35},{"ruleId":"45","severity":1,"message":"55","line":2,"column":37,"nodeType":"47","messageId":"48","endLine":2,"endColumn":43},{"ruleId":"50","severity":1,"message":"51","line":289,"column":15,"nodeType":"52","endLine":291,"endColumn":17},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Jumbotron' is defined but never used.","Identifier","unusedVar","'row' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Container' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]